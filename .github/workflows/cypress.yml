name: Cypress Tests
on: [push]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [1, 2] # Uses 2 parallel instances
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Install frontend dependencies
        run: npm ci

      - name: Start Django server
        run: |
          source pesti/bin/activate
          nohup python manage.py runserver 0.0.0.0:8000 &

      - name: Start React server
        run: |
          nohup npm run dev &  
      
      - name: Wait for servers to be ready
        uses: jakejarvis/wait-action@master
        with:
          time: 120 # Adjust timeout as necessary
          url: 'http://localhost:3000' # React server
          url1: 'http://localhost:8000' # Django server

      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          start: npm run dev
          wait-on: 'http://localhost:3000'
          record: true
          parallel: true
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ 'e028ba01-874d-4e68-ba1d-1cbd0a6d904a' }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ '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' }}